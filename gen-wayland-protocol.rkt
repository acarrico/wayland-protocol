#lang racket/base
(require racket/match)
(require racket/generic)

(require "config.rkt")
(require "generator/wayland-ast.rkt")
(require "generator/wayland-parser.rkt")
(require "generator/wayland-0-generator.rkt")
(require "gen-libwayland-client.rkt")
(require "gen-libwayland-server.rkt")
(require "gen-libc.rkt")

(define test-header
  "\
#lang racket/base

;;; NOTE: THIS IS AN AUTOGENERATED FILE
")

(define wayland-protocol
  (parse-wayland
   (string-append wayland-share "wayland.xml")))

(call-with-output-file
  "wayland-0/generated/client-test.rkt"
  (lambda (client-test-out)
    (call-with-output-file
      "wayland-0/generated/server-test.rkt"
      (lambda (server-test-out)
        (display test-header client-test-out)
        (newline client-test-out)
        (display test-header server-test-out)
        (newline server-test-out)
        (Protocol-dump wayland-protocol client-test-out server-test-out))
      #:mode 'text #:exists 'replace))
  #:mode 'text #:exists 'replace)

(gen-libwayland-client wayland-lib)
(gen-libwayland-server wayland-lib)
(gen-libc libc-dir)
