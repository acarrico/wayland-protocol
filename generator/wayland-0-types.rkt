#lang at-exp racket/base

(require "wayland-ast.rkt")
(require racket/pretty)
(require racket/list)
(require racket/match)
(require racket/function)
(require racket/format)

(provide interface-typed-client-dump)

(define (interface-typed-client-dump i out)
  (match-define (Interface (About what name summary description) version requests events enums) i)
  (define nick (interface-nick i))
  (define untyped-module @~a{wayland-0/generated/@|name|-client})
  (define type @~a{@(string-titlecase nick)Pointer})
  (define predicate @~a{@|type|?})
  (define listener-type @~a{@(string-titlecase nick)Listener})
  (define listener-predicate @~a{@|listener-type|?})
  (define request-messages (map Request-message requests))
  (define event-messages (map Event-message events))

  (display @~a{
#lang typed/racket/base

;;; NOTE: THIS IS AN AUTOGENERATED FILE

(require typed/racket/unsafe
         racket/match
         typed/wayland-0/common)

(provide @|type|
         @|predicate|
         @|listener-type|
         @|listener-predicate|
         )

(define @|predicate| (make-predicate @|type|))

(unsafe-require/typed @|untyped-module|
  (#:opaque RegistryListener @|name|_listener?))

(define @|listener-predicate| (make-predicate @|listener-type|))
}
out))
